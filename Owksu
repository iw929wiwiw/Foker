-- DEBUG version for Brainrot Finder (shows why Gods/Secrets may be skipped)
if not game:IsLoaded() then game.Loaded:Wait() end

local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local LocalPlayer = Players.LocalPlayer

-- Example config (add your full BrainrotConfig here)
getgenv().BrainrotConfig = getgenv().BrainrotConfig or {}
local cfg = getgenv().BrainrotConfig

-- Normalize function (same as fixed script)
local function normalizeName(name)
    if not name then return "" end
    local n = tostring(name):gsub("%(Clone%)", "") -- remove (Clone)
    n = n:gsub("%s+", " "):match("^%s*(.-)%s*$") or "" -- trim & collapse spaces
    return string.lower(n)
end

-- Build per-brainrot config lookup
local perBrainrotConfig = {}
for k, v in pairs(cfg) do
    if type(k) == "string" and type(v) == "table" then
        perBrainrotConfig[normalizeName(k)] = v
    end
end

-- Debug scan
for _, obj in ipairs(Workspace:GetChildren()) do
    if obj:IsA("Model") then
        local workspaceName = obj.Name
        local normName = normalizeName(workspaceName)
        local cfgEntry = perBrainrotConfig[normName]

        print("--------------------------")
        print("Workspace Name:", workspaceName)
        print("Normalized Name:", normName)
        if cfgEntry then
            print("Config Found: Enabled =", cfgEntry.Enabled, "Mutation =", cfgEntry.Mutation)
        else
            print("No Config Found")
        end
    end
end
